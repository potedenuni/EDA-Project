geom_smooth()
grid.arrange(p1, p2, ncol=1)
# This plot will zoom into the volatile acidity ranges between 0.2 and 1.0
p1 <- ggplot(aes(x = volatile.acidity, y = quality),
data = rw) +
geom_point(position = 'jitter', alpha = .25) +
scale_x_log10(breaks = seq(0.1,1.0, 0.1)) +
geom_smooth()
# This plot will zoom into the sulphate levels betwee, 0.2 and 1.0
p2 <- ggplot(aes(x = sulphates, y = quality),
data = rw) +
geom_point(position = 'jitter', alpha = .25) +
scale_x_log10(breaks = seq(0.1, 1.0, 0.1)) +
geom_smooth()
grid.arrange(p1, p2, ncol=1)
# This plot will zoom into the volatile acidity ranges between 0.2 and 1.0
p1 <- ggplot(aes(x = volatile.acidity, y = quality),
data = rw) +
geom_point(position = 'jitter', alpha = .25) +
scale_x_log10(breaks = seq(0.1, 8.0, 0.1)) +
geom_smooth()
# This plot will zoom into the sulphate levels betwee, 0.2 and 1.0
p2 <- ggplot(aes(x = sulphates, y = quality),
data = rw) +
geom_point(position = 'jitter', alpha = .25) +
scale_x_log10(breaks = seq(0.1, 8.0, 0.1)) +
geom_smooth()
grid.arrange(p1, p2, ncol=1)
# This plot will zoom into the volatile acidity ranges between 0.2 and 1.0
p1 <- ggplot(aes(x = volatile.acidity, y = quality),
data = rw) +
geom_point(position = 'jitter', alpha = .25) +
scale_x_log10(breaks = seq(0.1, 8.0, 0.25)) +
geom_smooth()
# This plot will zoom into the sulphate levels betwee, 0.2 and 1.0
p2 <- ggplot(aes(x = sulphates, y = quality),
data = rw) +
geom_point(position = 'jitter', alpha = .25) +
scale_x_log10(breaks = seq(0.1, 8.0, 0.25)) +
geom_smooth()
grid.arrange(p1, p2, ncol=1)
# In this section, we will subset the data into 2 subsets, limiting the
# volatile.acidity and sulphates to a range of 0.2 and 1.0, respectively.
# We will then re-run correlation tests on these subsets to see if the
# correlation is improved with the elimination of susspected outliers.
rw_subset_va <- subset(rw, volatile.acidity >= .2 & volatile.acidity <= 1.0,
select = c(volatile.acidity, quality))
rw_subset_sul <- subset(rw, sulphates >= .2 & sulphates <= 1.0,
select = c(sulphates, quality))
cor.test(x = rw_subset_va$volatile.acidity, y = rw_subset_va$quality)
cor.test(x = rw_subset_sul$sulphates, y = rw_subset_sul$quality)
# Analyze whether citric.acid levels have different quality tendancies
# across the range of sulphate levels.
ggplot(aes(x = sulphates, y = factor(quality), color = citric.acid),
data = rw) +
geom_point(position = 'jitter', alpha = 0.1, size = 5) +
coord_cartesian(xlim = c(0.2,1.0)) +
scale_colour_gradient(low = "black", high = "red") +
ggtitle('Sulphates and Citric Acid to Quality')
# Analyze whether citric.acid levels have different quality tendancies
# across the range of sulphate levels.
ggplot(aes(x = sulphates, y = factor(quality), color = citric.acid),
data = rw) +
geom_point(position = 'jitter', alpha = 0.1, size = 2.5) +
coord_cartesian(xlim = c(0.2,1.0)) +
scale_colour_gradient(low = "black", high = "red") +
ggtitle('Sulphates and Citric Acid to Quality')
# Analyze whether citric.acid levels have different quality tendancies
# across the range of sulphate levels.
ggplot(aes(x = sulphates, y = factor(quality), color = citric.acid),
data = rw) +
geom_point(position = 'jitter', alpha = 0.1, size = 4) +
coord_cartesian(xlim = c(0.2,1.0)) +
scale_colour_gradient(low = "black", high = "red") +
ggtitle('Sulphates and Citric Acid to Quality')
# Analyze whether sulphate levels have different quality tendancies
# across the range of citric.acid levels.
ggplot(aes(x = citric.acid, y = quality, color = sulphates),
data = rw) +
geom_point(position = 'jitter', alpha = 0.1, size = 4) +
coord_cartesian(xlim = c(0,1.0)) +
scale_colour_gradient(low = "black", high = "red") +
ggtitle('Citric Acid and Sulphates to Quality')
# Analyze whether sulphate levels have different quality tendancies
# across the range of citric.acid levels.
ggplot(aes(x = citric.acid, y = quality, color = sulphates),
data = rw) +
geom_point(position = 'jitter', alpha = 0.1, size = 4) +
coord_cartesian(xlim = c(0,0.75)) +
scale_colour_gradient(low = "black", high = "red") +
ggtitle('Citric Acid and Sulphates to Quality')
# Analyze whether volatile.acidity levels have different quality tendancies
# across the range of citric.acid levels.
ggplot(aes(x = citric.acid, y = quality, color = volatile.acidity),
data = rw) +
geom_point(position = 'jitter', alpha = 0.1, size = 4) +
coord_cartesian(xlim = c(0,1.0)) +
scale_colour_gradient(low = "black", high = "red") +
ggtitle('Citric Acid and Volatile Acidity to Quality')
# Analyze whether volatile.acidity levels have different quality tendancies
# across the range of citric.acid levels.
ggplot(aes(x = citric.acid, y = quality, color = volatile.acidity),
data = rw) +
geom_point(position = 'jitter', alpha = 0.1, size = 4) +
coord_cartesian(xlim = c(0,0.75)) +
scale_colour_gradient(low = "black", high = "red") +
ggtitle('Citric Acid and Volatile Acidity to Quality')
# Analyze whether citric.acid levels have different quality tendancies
# across the range of alcohol levels.
ggplot(aes(x = alcohol, y = quality, color = citric.acid),
data = rw) +
geom_point(position = 'jitter', alpha = 0.5, size = 4) +
coord_cartesian(xlim = c(9,14)) +
scale_colour_gradient(low = "black", high = "red") +
ggtitle('Citric Acid and Volatile Acidity to Quality')
# Analyze whether citric.acid levels have different quality tendancies
# across the range of alcohol levels.
ggplot(aes(x = alcohol, y = quality, color = citric.acid),
data = rw) +
geom_point(position = 'jitter', alpha = 0.1, size = 4) +
coord_cartesian(xlim = c(9,14)) +
scale_colour_gradient(low = "black", high = "red") +
ggtitle('Citric Acid and Volatile Acidity to Quality')
# Revisiting the alcohol vs quality relationship using jitter, alpha and size
# to highlight areas of concentration.
ggplot(aes(x = alcohol, y = quality),
data = rw) +
geom_point(position = 'jitter', alpha = .5, size = 10) +
scale_x_continuous(limits = c(8,15), breaks = seq(0,15,1)) +
labs(title = 'A Comparison of Alcohol Content to Quality',
x= 'Alcohol Content',
y = 'Quality')
# Revisiting the alcohol vs quality relationship using jitter, alpha and size
# to highlight areas of concentration.
ggplot(aes(x = alcohol, y = quality),
data = rw) +
geom_point(position = 'jitter', alpha = .5, size = 4) +
scale_x_continuous(limits = c(8,15), breaks = seq(0,15,1)) +
labs(title = 'A Comparison of Alcohol Content to Quality',
x= 'Alcohol Content',
y = 'Quality')
# Revisiting the alcohol vs quality relationship using jitter, alpha and size
# to highlight areas of concentration.
ggplot(aes(x = alcohol, y = quality),
data = rw) +
geom_point(position = 'jitter', alpha = .5, size = 4) +
scale_x_continuous(limits = c(8,15), breaks = seq(0,15,1)) +
labs(title = 'A Comparison of Alcohol Content to Quality',
x= 'Alcohol Content (% by volume)',
y = 'Quality (Scale of 0 to 10)')
# Revisiting the volatile.acidity vs quality relationship using jitter, alpha
# and size to highlight areas of concentration.
ggplot(aes(x = volatile.acidity, y = quality),
data = rw) +
geom_point(position = 'jitter', alpha = .25, size = 10) +
scale_x_continuous(breaks = seq(0,1.6,0.2)) +
labs(title = 'A Comparison of Volatile Acidity to Quality',
x= 'Volatile Acidity (acetic acid -g / dm^3',
y = 'Quality (scale of 0 to 10)')
# Revisiting the volatile.acidity vs quality relationship using jitter, alpha
# and size to highlight areas of concentration.
ggplot(aes(x = volatile.acidity, y = quality),
data = rw) +
geom_point(position = 'jitter', alpha = .25, size = 4) +
scale_x_continuous(breaks = seq(0,1.6,0.2)) +
labs(title = 'A Comparison of Volatile Acidity to Quality',
x= 'Volatile Acidity (acetic acid -g / dm^3',
y = 'Quality (scale of 0 to 10)')
# Revisiting the alcohol vs quality relationship using jitter, alpha and size
# to highlight areas of concentration.
ggplot(aes(x = alcohol, y = quality),
data = rw) +
geom_point(position = 'jitter', alpha = .25, size = 4) +
scale_x_continuous(limits = c(8,15), breaks = seq(0,15,1)) +
labs(title = 'A Comparison of Alcohol Content to Quality',
x= 'Alcohol Content (% by volume)',
y = 'Quality (Scale of 0 to 10)')
# Revisiting the sulphates vs quality relationship using jitter, alpha and size
# to highlight areas of concentration.
ggplot(aes(x = sulphates, y = quality),
data = rw) +
geom_point(position = 'jitter', alpha = .5, size = 10) +
scale_x_continuous(breaks = seq(0,1.6,0.2)) +
coord_cartesian(xlim = c(0.2,1.0)) +
labs(title = 'A Comparison of Sulphates to Quality',
x= 'Sulphates (potassium sulphate - g / dm^3)',
y = 'Quality (scale of 0 to 10)')
# Revisiting the sulphates vs quality relationship using jitter, alpha and size
# to highlight areas of concentration.
ggplot(aes(x = sulphates, y = quality),
data = rw) +
geom_point(position = 'jitter', alpha = .25, size = 4) +
scale_x_continuous(breaks = seq(0,1.6,0.2)) +
coord_cartesian(xlim = c(0.2,1.0)) +
labs(title = 'A Comparison of Sulphates to Quality',
x= 'Sulphates (potassium sulphate - g / dm^3)',
y = 'Quality (scale of 0 to 10)')
# Analyze whether citric.acid levels have different quality tendancies
# across the range of alcohol levels.
ggplot(aes(x = alcohol, y = quality, color = citric.acid),
data = rw) +
geom_point(position = 'jitter', alpha = 0.5, size = 4) +
coord_cartesian(xlim = c(9,14)) +
scale_colour_gradient(low = "black", high = "red") +
ggtitle('Citric Acid and Volatile Acidity to Quality')
# Analyze whether volatile.acidity levels have different quality tendancies
# across the range of citric.acid levels.
ggplot(aes(x = citric.acid, y = quality, color = volatile.acidity),
data = rw) +
geom_point(position = 'jitter', alpha = 0.5, size = 4) +
coord_cartesian(xlim = c(0,0.75)) +
scale_colour_gradient(low = "black", high = "red") +
ggtitle('Citric Acid and Volatile Acidity to Quality')
# Analyze whether sulphate levels have different quality tendancies
# across the range of citric.acid levels.
ggplot(aes(x = citric.acid, y = quality, color = sulphates),
data = rw) +
geom_point(position = 'jitter', alpha = 0.5, size = 4) +
coord_cartesian(xlim = c(0,0.75)) +
scale_colour_gradient(low = "black", high = "red") +
ggtitle('Citric Acid and Sulphates to Quality')
# Analyze whether sulphate levels have different quality tendancies
# across the range of citric.acid levels.
ggplot(aes(x = citric.acid, y = quality, color = sulphates),
data = rw) +
geom_point(position = 'jitter', alpha = 0.5, size = 4) +
coord_cartesian(xlim = c(0,1.0)) +
scale_colour_gradient(low = "black", high = "red") +
ggtitle('Citric Acid and Sulphates to Quality')
# Analyze whether citric.acid levels have different quality tendancies
# across the range of sulphate levels.
ggplot(aes(x = sulphates, y = factor(quality), color = citric.acid),
data = rw) +
geom_point(position = 'jitter', alpha = 0.5, size = 4) +
coord_cartesian(xlim = c(0.2,1.0)) +
scale_colour_gradient(low = "black", high = "red") +
ggtitle('Sulphates and Citric Acid to Quality')
# This plot will explore the relationship between citric.acid and
# volatile.acidity.
ggplot(aes(x = citric.acid, y = volatile.acidity),
data = rw) +
geom_point(position = 'jitter', alpha = .25) +
geom_smooth()
# Load all of the packages that you end up using in your analysis in this code
# chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk. This
# prevents the code from displaying in the knitted HTML output. You should set
# echo=FALSE for all code chunks in your file, unless it makes sense for your
# report to show the code that generated a particular plot.
# The other parameters for "message" and "warning" should also be set to FALSE
# for other code chunks once you have verified that each plot comes out as you
# want it to. This will clean up the flow of your report.
library(ggplot2)
library(gridExtra)
library(GGally)
# Load the Data
rw <- read.csv('wineQualityReds.csv')
# First we will explore the content of the file using head to see the first few
# rows of data.
head(rw)
# Next I will run summary to explore the statistical information for each
# variable.
summary(rw)
# Since x is a list of indexes, I will remove it from the data set.
rw$X <- NULL
p1 <- ggplot(aes(x = fixed.acidity),
data = rw) +
geom_histogram()
p2 <- ggplot(aes(x = volatile.acidity),
data = rw) +
geom_histogram()
p3 <- ggplot(aes(x = citric.acid),
data = rw) +
geom_histogram()
p4 <- ggplot(aes(x = residual.sugar),
data = rw) +
geom_histogram()
p5 <- ggplot(aes(x = chlorides),
data = rw) +
geom_histogram()
p6 <- ggplot(aes(x = free.sulfur.dioxide),
data = rw) +
geom_histogram()
p7 <- ggplot(aes(x = total.sulfur.dioxide),
data = rw) +
geom_histogram()
p8 <- ggplot(aes(x = density),
data = rw) +
geom_histogram()
p9 <- ggplot(aes(x = pH),
data = rw) +
geom_histogram()
p10 <- ggplot(aes(x = sulphates),
data = rw) +
geom_histogram()
p11 <- ggplot(aes(x = alcohol),
data = rw) +
geom_histogram()
p12 <- ggplot(aes(x = factor(quality)),
data = rw) +
geom_bar()
grid.arrange(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, ncol=3)
# Following is a basic ggpairs analysis to look for correlations.
ggpairs(rw)
ggplot(aes(x = alcohol, y = quality),
data = rw) +
geom_point(position = 'jitter', alpha = .25) +
scale_x_continuous(breaks = 1:15)
ggplot(aes(x = alcohol, y = quality),
data = rw) +
geom_point(position = 'jitter', alpha = .25) +
scale_x_log10(breaks = 1:15)
# This plot will compare volatile acidity with quality
p1 <- ggplot(aes(x = volatile.acidity, y = quality),
data = rw) +
geom_point(position = 'jitter', alpha = .25) +
geom_smooth()
# This plot will compare sulphates with quality
p2 <- ggplot(aes(x = sulphates, y = quality),
data = rw) +
geom_point(position = 'jitter', alpha = .25) +
geom_smooth()
# This plot will compare citric acid with quality
p3 <- ggplot(aes(x = citric.acid, y = quality),
data = rw) +
geom_point(position = 'jitter', alpha = .25) +
geom_smooth()
grid.arrange(p1, p2, p3, ncol=1)
p1 <- ggplot(aes(x = quality, y = volatile.acidity),
data = rw) +
geom_boxplot()
p2 <- ggplot(aes(x = quality, y = sulphates),
data = rw) +
geom_boxplot()
p3 <- ggplot(aes(x = quality, y = citric.acid),
data = rw) +
geom_boxplot()
grid.arrange(p1, p2, p3, ncol = 1)
# This plot will zoom into the volatile acidity ranges between 0.2 and 1.0
p1 <- ggplot(aes(x = volatile.acidity, y = quality),
data = rw) +
geom_point(position = 'jitter', alpha = .25) +
coord_cartesian(xlim = c(0.2,1.0)) +
geom_smooth()
# This plot will zoom into the sulphate levels betwee, 0.2 and 1.0
p2 <- ggplot(aes(x = sulphates, y = quality),
data = rw) +
geom_point(position = 'jitter', alpha = .25) +
coord_cartesian(xlim = c(0.2,1.0)) +
geom_smooth()
grid.arrange(p1, p2, ncol=1)
# This plot will zoom into the volatile acidity ranges between 0.2 and 1.0
p1 <- ggplot(aes(x = volatile.acidity, y = quality),
data = rw) +
geom_point(position = 'jitter', alpha = .25) +
scale_x_log10(breaks = seq(0.1, 8.0, 0.25)) +
geom_smooth()
# This plot will zoom into the sulphate levels betwee, 0.2 and 1.0
p2 <- ggplot(aes(x = sulphates, y = quality),
data = rw) +
geom_point(position = 'jitter', alpha = .25) +
scale_x_log10(breaks = seq(0.1, 8.0, 0.25)) +
geom_smooth()
grid.arrange(p1, p2, ncol=1)
# In this section, we will subset the data into 2 subsets, limiting the
# volatile.acidity and sulphates to a range of 0.2 and 1.0, respectively.
# We will then re-run correlation tests on these subsets to see if the
# correlation is improved with the elimination of susspected outliers.
rw_subset_va <- subset(rw, volatile.acidity >= .2 & volatile.acidity <= 1.0,
select = c(volatile.acidity, quality))
rw_subset_sul <- subset(rw, sulphates >= .2 & sulphates <= 1.0,
select = c(sulphates, quality))
cor.test(x = rw_subset_va$volatile.acidity, y = rw_subset_va$quality)
cor.test(x = rw_subset_sul$sulphates, y = rw_subset_sul$quality)
# This plot will explore the relationship between citric.acid and
# volatile.acidity.
ggplot(aes(x = citric.acid, y = volatile.acidity),
data = rw) +
geom_point(position = 'jitter', alpha = .25) +
geom_smooth()
# Analyze whether citric.acid levels have different quality tendancies
# across the range of sulphate levels.
ggplot(aes(x = sulphates, y = factor(quality), color = citric.acid),
data = rw) +
geom_point(position = 'jitter', alpha = 0.5, size = 4) +
coord_cartesian(xlim = c(0.2,1.0)) +
scale_colour_gradient(low = "black", high = "red") +
ggtitle('Sulphates and Citric Acid to Quality')
# Analyze whether sulphate levels have different quality tendancies
# across the range of citric.acid levels.
ggplot(aes(x = citric.acid, y = quality, color = sulphates),
data = rw) +
geom_point(position = 'jitter', alpha = 0.5, size = 4) +
coord_cartesian(xlim = c(0,1.0)) +
scale_colour_gradient(low = "black", high = "red") +
ggtitle('Citric Acid and Sulphates to Quality')
# Analyze whether sulphate levels have different quality tendancies
# across the range of citric.acid levels.
ggplot(aes(x = citric.acid, y = quality, color = sulphates),
data = rw) +
geom_point(position = 'jitter', alpha = 0.5, size = 4) +
coord_cartesian(xlim = c(0,0.75)) +
scale_colour_gradient(low = "black", high = "red") +
ggtitle('Citric Acid and Sulphates to Quality')
# Analyze whether volatile.acidity levels have different quality tendancies
# across the range of citric.acid levels.
ggplot(aes(x = citric.acid, y = quality, color = volatile.acidity),
data = rw) +
geom_point(position = 'jitter', alpha = 0.5, size = 4) +
coord_cartesian(xlim = c(0,0.75)) +
scale_colour_gradient(low = "black", high = "red") +
ggtitle('Citric Acid and Volatile Acidity to Quality')
# Analyze whether citric.acid levels have different quality tendancies
# across the range of alcohol levels.
ggplot(aes(x = alcohol, y = quality, color = citric.acid),
data = rw) +
geom_point(position = 'jitter', alpha = 0.5, size = 4) +
coord_cartesian(xlim = c(9,14)) +
scale_colour_gradient(low = "black", high = "red") +
ggtitle('Citric Acid and Volatile Acidity to Quality')
# Revisiting the alcohol vs quality relationship using jitter, alpha and size
# to highlight areas of concentration.
ggplot(aes(x = alcohol, y = quality),
data = rw) +
geom_point(position = 'jitter', alpha = .25, size = 4) +
scale_x_continuous(limits = c(8,15), breaks = seq(0,15,1)) +
labs(title = 'A Comparison of Alcohol Content to Quality',
x= 'Alcohol Content (% by volume)',
y = 'Quality (Scale of 0 to 10)')
# Revisiting the volatile.acidity vs quality relationship using jitter, alpha
# and size to highlight areas of concentration.
ggplot(aes(x = volatile.acidity, y = quality),
data = rw) +
geom_point(position = 'jitter', alpha = .25, size = 4) +
scale_x_continuous(breaks = seq(0,1.6,0.2)) +
labs(title = 'A Comparison of Volatile Acidity to Quality',
x= 'Volatile Acidity (acetic acid -g / dm^3',
y = 'Quality (scale of 0 to 10)')
# Revisiting the sulphates vs quality relationship using jitter, alpha and size
# to highlight areas of concentration.
ggplot(aes(x = sulphates, y = quality),
data = rw) +
geom_point(position = 'jitter', alpha = .25, size = 4) +
scale_x_continuous(breaks = seq(0,1.6,0.2)) +
coord_cartesian(xlim = c(0.2,1.0)) +
labs(title = 'A Comparison of Sulphates to Quality',
x= 'Sulphates (potassium sulphate - g / dm^3)',
y = 'Quality (scale of 0 to 10)')
# Next I will run summary to explore the statistical information for each
# variable.
summary(rw)
head(rw)
p1 <- ggplot(aes(x = quality, y = volatile.acidity, group = quality),
data = rw) +
geom_boxplot()
grid.arrange(p1, p2, p3, ncol = 1)
p1 <- ggplot(aes(x = quality, y = volatile.acidity, group = quality),
data = rw) +
geom_boxplot()
p2 <- ggplot(aes(x = quality, y = sulphates, group = quality),
data = rw) +
geom_boxplot()
p3 <- ggplot(aes(x = quality, y = citric.acid, group = quality),
data = rw) +
geom_boxplot()
grid.arrange(p1, p2, p3, ncol = 1)
p1 <- ggplot(aes(x = quality, y = volatile.acidity, group = quality),
data = rw) +
geom_boxplot()
p2 <- ggplot(aes(x = quality, y = sulphates, group = quality),
data = rw) +
geom_boxplot()
p3 <- ggplot(aes(x = quality, y = citric.acid, group = quality),
data = rw) +
xlab = seq(3,8,1) +
geom_boxplot()
p1 <- ggplot(aes(x = quality, y = volatile.acidity, group = quality),
data = rw) +
geom_boxplot()
p2 <- ggplot(aes(x = quality, y = sulphates, group = quality),
data = rw) +
geom_boxplot()
p3 <- ggplot(aes(x = quality, y = citric.acid, group = quality),
data = rw) +
geom_boxplot(breaks = seq(3,8,1))
grid.arrange(p1, p2, p3, ncol = 1)
p1 <- ggplot(aes(x = quality, y = volatile.acidity, group = quality),
data = rw) +
geom_boxplot()+
scale_x_continuous(breaks = seq(3,8,1))
p2 <- ggplot(aes(x = quality, y = sulphates, group = quality),
data = rw) +
geom_boxplot()+
scale_x_continuous(breaks = seq(3,8,1))
p3 <- ggplot(aes(x = quality, y = citric.acid, group = quality),
data = rw) +
geom_boxplot() +
scale_x_continuous(breaks = seq(3,8,1))
grid.arrange(p1, p2, p3, ncol = 1)
p1 <- ggplot(aes(x = quality, y = volatile.acidity, group = quality),
data = rw) +
geom_boxplot()+
scale_x_continuous(breaks = seq(3,8,1))
p2 <- ggplot(aes(x = quality, y = sulphates, group = quality),
data = rw) +
geom_boxplot()+
scale_x_continuous(breaks = seq(3,8,1))
p3 <- ggplot(aes(x = quality, y = citric.acid, group = quality),
data = rw) +
geom_boxplot() +
scale_x_continuous(breaks = seq(3,8,1))
grid.arrange(p1, p2, p3, ncol = 1)
